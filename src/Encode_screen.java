
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Mayank
 */
public class Encode_screen extends javax.swing.JFrame {

    /**
     * Creates new form Encode_screen
     */
    int user_id;
    int cnt=0;
    String path = null;
    public Encode_screen() {
        initComponents();
        this.setLocationRelativeTo(null);
        jLabel1.setBackground(new Color(11, 12, 12));
    }

    public Encode_screen(int user_id) {
        initComponents();
        this.setLocationRelativeTo(null);
        jLabel1.setBackground(new Color(11, 12, 12));
        this.user_id = user_id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        encode = new javax.swing.JLabel();
        PhotoLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        encode1 = new javax.swing.JLabel();
        encode3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        encode4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1320, 720));
        getContentPane().setLayout(null);

        encode.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        encode.setForeground(new java.awt.Color(255, 255, 255));
        encode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        encode.setText("Encode");
        encode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 51)));
        encode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        encode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encodeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                encodeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                encodeMouseExited(evt);
            }
        });
        getContentPane().add(encode);
        encode.setBounds(460, 610, 360, 50);
        getContentPane().add(PhotoLabel);
        PhotoLabel.setBounds(430, 140, 450, 340);

        jSeparator3.setBackground(new java.awt.Color(102, 255, 51));
        jSeparator3.setForeground(new java.awt.Color(102, 255, 51));
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(400, 40, 510, 30);

        jSeparator2.setBackground(new java.awt.Color(102, 255, 51));
        jSeparator2.setForeground(new java.awt.Color(102, 255, 51));
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(400, 110, 510, 30);

        encode1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        encode1.setForeground(new java.awt.Color(102, 255, 51));
        encode1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        encode1.setText("Encode");
        encode1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        encode1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                encode1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                encode1MouseExited(evt);
            }
        });
        getContentPane().add(encode1);
        encode1.setBounds(500, 50, 300, 50);

        encode3.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        encode3.setForeground(new java.awt.Color(255, 255, 255));
        encode3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        encode3.setText("View Recent Used Images");
        encode3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 51)));
        encode3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        encode3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encode3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                encode3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                encode3MouseExited(evt);
            }
        });
        getContentPane().add(encode3);
        encode3.setBounds(140, 520, 430, 50);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/left-arrow.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 40, 70, 70);

        encode4.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        encode4.setForeground(new java.awt.Color(255, 255, 255));
        encode4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        encode4.setText("Select from Device");
        encode4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 51)));
        encode4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        encode4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encode4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                encode4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                encode4MouseExited(evt);
            }
        });
        getContentPane().add(encode4);
        encode4.setBounds(730, 520, 360, 50);

        jLabel1.setBackground(new java.awt.Color(11, 12, 12));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1320, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encodeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encodeMouseEntered
        // TODO add your handling code here:
        encode.setForeground(Color.GREEN);
        Color VISIBLE_BORDER = new java.awt.Color(255, 255, 255);
        LineBorder visibleBorder = new LineBorder(VISIBLE_BORDER, 1);

        encode.setBorder(visibleBorder);
    }//GEN-LAST:event_encodeMouseEntered

    private void encodeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encodeMouseExited
        // TODO add your handling code here:
        encode.setForeground(Color.WHITE);
        Color VISIBLE_BORDER = new java.awt.Color(102, 255, 51);
        LineBorder visibleBorder = new LineBorder(VISIBLE_BORDER, 1);

        encode.setBorder(visibleBorder);
    }//GEN-LAST:event_encodeMouseExited

    private void encode1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encode1MouseEntered
        // TODO add your handling code here:
        encode1.setForeground(Color.WHITE);
    }//GEN-LAST:event_encode1MouseEntered

    private void encode1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encode1MouseExited
        // TODO add your handling code here:
        encode1.setForeground(Color.GREEN);
    }//GEN-LAST:event_encode1MouseExited

    private void encode3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encode3MouseEntered
        // TODO add your handling code here:
        encode3.setForeground(Color.GREEN);
        Color VISIBLE_BORDER = new java.awt.Color(255, 255, 255);
        LineBorder visibleBorder = new LineBorder(VISIBLE_BORDER, 1);

        encode3.setBorder(visibleBorder);
    }//GEN-LAST:event_encode3MouseEntered

    private void encode3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encode3MouseExited
        // TODO add your handling code here:
        encode3.setForeground(Color.WHITE);
        Color VISIBLE_BORDER = new java.awt.Color(102, 255, 51);
        LineBorder visibleBorder = new LineBorder(VISIBLE_BORDER, 1);

        encode3.setBorder(visibleBorder);
    }//GEN-LAST:event_encode3MouseExited

    private void encode3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encode3MouseClicked
        // TODO add your handling code here:
        My_profile_Screen my = new My_profile_Screen(user_id);
        this.setVisible(false);
        my.setVisible(true);
    }//GEN-LAST:event_encode3MouseClicked

    private void encodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encodeMouseClicked
        // TODO add your handling code here:
            Connection conn = null;
            PreparedStatement pstmt = null;
            Statement stmt = null;
            FileInputStream inputStream = null;
            if(cnt != 0)
            {
            try {

                Class.forName("com.mysql.jdbc.Driver");

                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/stegofi", "root", "mayank");

                inputStream = new FileInputStream(path);
                pstmt = conn.prepareStatement("INSERT INTO `encode`(`UserId`, `image`) VALUES ('"+user_id+"',(?))");

                pstmt.setBinaryStream(1, (InputStream) inputStream, inputStream.available());
                pstmt.executeUpdate();
                Encode_2 e2 = new Encode_2(user_id,path);
                this.setVisible(false);
                e2.setVisible(true);
            } catch (Exception e) {

                System.out.println(e);

            } finally {
                try {
                    conn.close();
                    pstmt.close();
                } catch (Exception e) {
                    System.out.println("SQL Exception Finally : " + e);
                }
            }
            }
            else
                JOptionPane.showMessageDialog(this, "Image is not selected !", "ERROR !", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_encodeMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        Encode_decode ee = new Encode_decode(user_id);
        this.setVisible(false);
        ee.setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void encode4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encode4MouseClicked
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        //file.setCurrentDirectory(new File(System.getProperty("user.home")));

        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "png", "jpeg");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);

        path = null;
        File selectedFile = null;
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = file.getSelectedFile();
            path = selectedFile.getAbsolutePath();

            ImageIcon MyImage = new ImageIcon(path);
            Image img = MyImage.getImage();
            Image newImage = img.getScaledInstance(PhotoLabel.getWidth(), PhotoLabel.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon image = new ImageIcon(newImage);
            PhotoLabel.setIcon(image);
            cnt++;
            
        }
    }//GEN-LAST:event_encode4MouseClicked

    private void encode4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encode4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_encode4MouseEntered

    private void encode4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encode4MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_encode4MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Encode_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Encode_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Encode_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Encode_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Encode_screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PhotoLabel;
    private javax.swing.JLabel encode;
    private javax.swing.JLabel encode1;
    private javax.swing.JLabel encode3;
    private javax.swing.JLabel encode4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
